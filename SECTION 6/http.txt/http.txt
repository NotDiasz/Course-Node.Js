
HTTP (HyperText Transfer Protocol)
HTTP é um protocolo de comunicação usado para transferência de informações na web. Ele é o principal protocolo para a troca de dados entre um cliente (geralmente um navegador ou aplicação) e um servidor.

Métodos HTTP Comuns
GET

Finalidade: Obter dados de um servidor.
Características: É seguro e idempotente (não altera o estado do servidor).
Exemplo: Acessar uma página da web ou buscar informações de uma API.
POST

Finalidade: Enviar dados ao servidor para criar um novo recurso.
Características: Não é idempotente, já que cada requisição pode gerar um novo recurso ou alterar o estado do servidor.
Exemplo: Submeter um formulário de cadastro.
PUT

Finalidade: Atualizar ou substituir completamente um recurso existente no servidor.
Características: Idempotente, ou seja, várias requisições com os mesmos dados têm o mesmo efeito.
Exemplo: Atualizar o perfil de um usuário.
DELETE

Finalidade: Remover um recurso existente no servidor.
Características: Idempotente (remover o mesmo recurso repetidamente terá o mesmo efeito após a primeira execução).
Exemplo: Excluir um post em uma rede social.
Node.js
Node.js é uma plataforma de tempo de execução JavaScript construída sobre o motor V8 do Google Chrome. Ele permite executar JavaScript no lado do servidor. É amplamente usado para construir aplicações web, APIs, scripts de automação, entre outros.

Características do Node.js
Assíncrono e baseado em eventos: Usa um modelo não-bloqueante, ideal para aplicações em tempo real.
Single-threaded com I/O assíncrono: Gerencia múltiplas requisições simultaneamente com eficiência.
NPM (Node Package Manager): Possui um ecossistema vasto de bibliotecas e módulos reutilizáveis.